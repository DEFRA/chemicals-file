spring.application.version=@project.version@
spring.application.name=REACH File Service
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
# With the file-size-threshold default of 0 Jetty will NEVER write the file to disk and instead load the entire incoming file in memory
spring.servlet.multipart.file-size-threshold=1B
server.port=${HTTP_FILE_SERVICE_PLATFORM_PORT}

azure.storage.dossier.connection=${AZURE_STORAGE_CONNECTION_STRING}
azure.storage.dossier.container=${AZURE_STORAGE_CONTAINER_NAME}
azure.storage.document.connection=${AZURE_DOCUMENT_STORAGE_CONNECTION_STRING}
azure.storage.document.container=${AZURE_DOCUMENT_STORAGE_CONTAINER_NAME}
azure.storage.export.connection=${AZURE_EXPORT_STORAGE_CONNECTION_STRING}
azure.storage.export.container=${AZURE_EXPORT_STORAGE_CONTAINER_NAME}
azure.storage.temp.connection=${AZURE_TMP_STORAGE_CONNECTION_STRING}
azure.storage.temp.container=${AZURE_TMP_STORAGE_CONTAINER_NAME}
azure.storage.sasTokenTTLSeconds=${AZURE_STORAGE_SAS_TOKEN_TTL_SECONDS:300}
azure.storage.sasUriHostOverride=${AZURE_STORAGE_SAS_URI_HOST_OVERRIDE:#{null}}
azure.storage.sasUriPortOverride=${AZURE_STORAGE_SAS_URI_PORT_OVERRIDE:#{null}}

logging.pattern.console=%-6level  [%d{YYYY-MM-DD HH:mm:ss.SSS}] [user: %X{userid:--}] [oid: %X{operation-id:--}] [%t] [%logger{5}] - %msg%n
